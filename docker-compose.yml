version: '3'
services:
  nats-server:
    image: nats:latest
    ports:
      - 8222:8222

  client-gateway:
    build: ./client-gateway
    ports:
      - ${CLIENT_GATEWAY_PORT}:3000
    volumes:
      - ./client-gateway/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - PORT=3000
      - NATS_SERVERS=nats://nats-server:4222

  orders-database:
    image: postgres:latest
    restart: always
    volumes:
      - ./orders-microservice/postgres:/var/lib/postgresql/data
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123456
      - POSTGRES_DB=ordersdb

  auth-database:
    image: mongo:latest
    restart: always
    volumes:
      - ./auth-microservice/mongo:/data/db
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
    command: "mongod --replSet rs0 --bind_ip_all"
    healthcheck:
      test: ["CMD-SHELL", "mongosh --eval 'db.adminCommand(\"ping\")' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s

  mongodb-setup:
    image: mongo:latest
    restart: "no"
    depends_on:
      auth-database:
        condition: service_healthy
    command: >
      mongosh --host auth-database:27017 --eval '
        try {
          rs.status();
        } catch (e) {
          rs.initiate({
            _id: "rs0",
            members: [{ _id: 0, host: "auth-database:27017", priority: 1 }]
          });
        }
      '

  auth-microservice:
    build: ./auth-microservice
    volumes:
      - ./auth-microservice/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - PORT=${AUTH_MICROSERVICE_PORT}
      - NATS_SERVERS=nats://nats-server:4222
      - DATABASE_URL=${AUTH_DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}

  products-microservice:
    build: ./products-microservice
    ports:
      - 3001:3001
    volumes:
      - ./products-microservice/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - PORT=3001
      - NATS_SERVERS=nats://nats-server:4222
      - DATABASE_URL=file:./dev.db

  orders-microservice:
    depends_on:
      - orders-database
    build: ./orders-microservice
    ports:
      - 3002:3002
    volumes:
      - ./orders-microservice/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - PORT=3002
      - NATS_SERVERS=nats://nats-server:4222
      - DATABASE_URL=postgresql://postgres:123456@orders-database:5432/ordersdb?schema=public

  payments-microservice:
    build: ./payments-microservice
    ports:
      - ${PAYMENTS_MICROSERVICE_PORT}:${PAYMENTS_MICROSERVICE_PORT}
    volumes:
      - ./payments-microservice/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - PORT=${PAYMENTS_MICROSERVICE_PORT}
      - NATS_SERVERS=nats://nats-server:4222
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_SUCCESS_URL=${STRIPE_SUCCESS_URL}
      - STRIPE_CANCEL_URL=${STRIPE_CANCEL_URL}
      - STRIPE_ENDPOINT_SECRET=${STRIPE_ENDPOINT_SECRET}